name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '12'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.1'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/release/app-release.apk

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

                 # - name: Setup Node.js environment
    # uses: actions/setup-node@v4.0.1
    #   with:
    # # Set always-auth in npmrc.
    # always-auth: # optional, default is false
    # # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    # node-version: # optional
    # # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    # node-version-file: # optional
    # # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    # architecture: # optional
    # # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    # check-latest: # optional
    # # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    # registry-url: # optional
    # # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    # scope: # optional
    # # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    # token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    # cache: # optional
    # # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    # cache-dependency-path: # optional
               
